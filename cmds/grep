#!/usr/bin/env bash

# some formatting variables
bold="\033[1m"
underline="\033[4m"
normal="\033[0m"
# to use this formatting use 'echo -e'
# start formatting sequence with ${bold} or ${underline}
# and end it with ${normal}

# The command's name
echo -e "\n${bold}COMMAND NAME:${normal}"
echo -e "\n\t${bold}grep${normal} - global regular expression print"

echo -e "\n------------"

# the command's description
echo -e "\n${bold}COMMAND DESCRIPTION:${normal}"


echo -e "\n\tgrep, which stands for global regular expression print, searches certain file"
echo -e "\tglobally and prints lines which match a specified regular expression."
echo -e "\n------------"

# the command's syntax
echo -e "\n${bold}COMMAND SYNTAX:${normal}:"
echo -e "\n\tgrep [options] pattern [files]"
echo -e "\n\t\t-r: Search recursively throught an entire directory tree."
echo -e "\t\t-v: Display all lines that do not match the search criteria (reverse of grep command)."
echo -e "\t\t-n: Display matched lines and their line numbers."

echo -e "\n------------"

# the command's usage examples
# example 1
echo -e "\n${bold}COMMAND EXAMPLES:${normal}"
echo -e "\n\t${underline}Example 1${normal}"
echo -e "\n\tgrep -c \"src=['\\\"]..*\.js['\\\"]\" yahoo.html"
echo -e "\n\t\tfind the number of all javascript files in 'yahoo.com' file. This matches src"
echo -e "\t\tattributes with either single or double quotes, with filenames that have at"
echo -e "\t\tleast one character in the name.\n"

echo -e "\n\t${underline}Example 2${normal}"
echo -e "\n\tls -1 ~/projects/ | grep \"\\.md\""
echo -e "\n\t\tfind and list all markdown files in the 'projects' directory.\n"

exit 0
