#!/usr/bin/env bash

# some formatting variables
bold="\033[1m"
underline="\033[4m"
normal="\033[0m"
# to use this formatting use 'echo -e'
# start formatting sequence with ${bold} or ${underline}
# and end it with ${normal}

# The command's name
echo -e "\n${bold}COMMAND NAME:${normal}"
echo -e "\n\t${bold}echo${normal}"

echo -e "\n------------"

# the command's description
echo -e "\n${bold}COMMAND DESCRIPTION:${normal}"
echo -e "\n\t'echo' command displays the line of text. The text can be a string literal"
echo -e "\tthat is passed to the echo command or it may be a variable, or a combination of"
echo -e "\tstrings and variables."
echo -e "\tFor example:"
echo -e "\t\t\tname=\"Slartibartfast\""
echo -e "\t\t\techo \"Hello my friend \$name!\""
echo -e "\t\t\tOutputs: Hello my friend Slartibartfast!"
echo -e "\n\t'echo' accepts a few options that enable or disable some formatting options."
echo -e "\tThe most usable option is the '-e' option which enables interpretation of"
echo -e "\ttabs, newlines, backslashes and some more formatting options."

echo -e "\n------------"

# the command's syntax
echo -e "\n${bold}COMMAND SYNTAX:${normal}"
echo -e "\n\ttest argument1 argument2"
echo -e "\t\targument1: description of argument 1"
echo -e "\t\targument2: description of argument 2"
#   ...      etc

echo -e "\n------------"

# the command's usage examples
# example 1
echo -e "\n${bold}COMMAND EXAMPLES:${normal}"
echo -e "\n\t${underline}Example 1${normal}"
echo -e "\t\ttest"
echo -e "\t\tdescription here"

# example 2
echo -e "\n\t${underline}Example 2${normal}"
echo -e "\t\ttest something"
echo -e "\t\tdescription here\n"

#   ...      etc

exit 0
