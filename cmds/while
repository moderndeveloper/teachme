#!/usr/bin/env bash

# some formatting variables
bold="\033[1m"
underline="\033[4m"
normal="\033[0m"
# to use this formatting use 'echo -e'
# start formatting sequence with ${bold} or ${underline}
# and end it with ${normal}

# The command's name
echo -e "\n${bold}COMMAND NAME:${normal}"
echo -e "\n\t${bold}while${normal} - continually execute a block of statements while expression is true."

echo -e "\n------------"

# the command's description
echo -e "\n${bold}COMMAND DESCRIPTION:${normal}"
echo -e "\n\tWhile loop enables you to execute a set of actions/commands repeatedly, until"
echo -e "\tcondition is evaluated to true, after it's being evaluated to false, it will stop execution"
echo -e "\tand will exit the loop. One full execution of a command within a while loop is called"
echo -e "\titeration. The process starts with a variable evaluation, then execution of the body and"
echo -e "\tafter condition is no longer true - process ends."

echo -e "\n------------"

# the command's syntax
echo -e "\n${bold}COMMAND SYNTAX:${normal}"
echo -e "\n\ttest argument1 argument2"
echo -e "\t\targument1: description of argument 1"
echo -e "\t\targument2: description of argument 2"
#   ...      etc

echo -e "\n------------"

# the command's usage examples
# example 1
echo -e "\n${bold}COMMAND EXAMPLES:${normal}"
echo -e "\n\t${underline}Example 1${normal}"
echo -e "\t\ttest"
echo -e "\t\tdescription here"

# example 2
echo -e "\n\t${underline}Example 2${normal}"
echo -e "\t\ttest something"
echo -e "\t\tdescription here\n"

#   ...      etc

exit 0
