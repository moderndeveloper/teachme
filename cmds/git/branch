#!/usr/bin/env bash

# some formatting variables
bold="\033[1m"
underline="\033[4m"
normal="\033[0m"
# to use this formatting use 'echo -e'
# start formatting sequence with ${bold} or ${underline}
# and end it with ${normal}

# The command's name
echo -e "\n${bold}COMMAND NAME:${normal}"
echo -e "\n\t${bold}git branch${normal} - list, create, delete branches."

echo -e "\n------------"

# the command's description
echo -e "\n${bold}COMMAND DESCRIPTION:${normal}"
echo -e "\n\tSometimes you need to work on a separate feature for a project, or fix a bug"
echo -e "\twhich occasionally appeared during the development process. Developing something"
echo -e "\tnew is always risky, as well as bug fixing, something might go wrong, to make sure"
echo -e "\tunstable code is never committed to master branch, there is a 'git branch' command."
echo -e "\n\tBy using 'git branch' command, you can create a separate branch to work on, branch"
echo -e "\trepresents a copy of your main code base, but created with a special purpose."
echo -e "\tFurther after, being satisfied with the results, you are able to merge a branch into master."

echo -e "\n------------"

# the command's syntax
echo -e "\n${bold}COMMAND SYNTAX:${normal}"
echo -e "\n\tgit branch [--color[=<when>] | --no-color] [-r | -a]"
echo -e "\t\t   [--list] [-v [--abbrev=<length> | --no-abbrev]]"
echo -e "\t\t   [--column[=<options>] | --no-column]"
echo -e "\t\t   [(--merged | --no-merged | --contains) [<commit>]] [--sort=<key>]"
echo -e "\t\t   [--points-at <object>] [<pattern>...]"
echo -e "\tgit branch [--set-upstream | --track | --no-track] [-l] [-f] <branchname> [<start-point>]"
echo -e "\tgit branch (--set-upstream-to=<upstream> | -u <upstream>) [<branchname>]"
echo -e "\tgit branch --unset-upstream [<branchname>]"
echo -e "\tgit branch (-m | -M) [<oldbranch>] <newbranch>"
echo -e "\tgit branch (-d | -D) [-r] <branchname>..."
echo -e "\tgit branch --edit-description [<branchname>]"
echo -e "\n\t\t${bold}-d, --delete${normal}:"
echo -e "\n\t\t\tdelete a branch. Branch must be fully merged in its upstream branch"
echo -e "\t\t\tor in the HEAD."
echo -e "\n\t\t${bold}-m, --move${normal}: move/rename a branch."
echo -e "\n\t\t${bold}-r, --remotes${normal}:"
echo -e "\n\t\t\tlist or delete (if used with '-d') remote-tracking branches."
echo -e "\n\t\t${bold}-a, --all${normal}:"
echo -e "\n\t\t\tlist local and remote-tracking branches."
echo -e "\n\t\t${bold}-t, --track${normal}:"
echo -e "\n\t\t\tset tracking information when creating a new branch, set <start-point>"
echo -e "\t\t\tto be the 'upstream' for <branchname>."
echo -e "\n\t\t${bold}--set-upstream${normal}:"
echo -e "\n\t\t\tif the branch does not exists yet, this behaves exactly as ${bold}--track${normal},"
echo -e "\t\t\tif branch exists then where branch points to is not changed."
echo -e "\n\t\t${bold}-u <upstream>, --set-upstream-to=<upstream>${normal}:"
echo -e "\n\t\t\tset <upstream> to be <branchname>'s upstream branch. If no <branchname>"
echo -e "\t\t\tis specified then it defaults to the current branch."
echo -e "\n\t\t${bold}<branchname>${normal}:"
echo -e "\n\t\t\tthe name of the branch to create or delete."
echo -e "\n\t\t${bold}<start-point>${normal}:"
echo -e "\n\t\t\tthe new branch head will point to this commit. It may be given as a branch name,"
echo -e "\t\t\ta commit-id, or a tag. If this option is omitted, the current HEAD will be used"
echo -e "\t\t\tinstead."
echo -e "\n\t\t${bold}<oldbranch>${normal}: the name of the existing branch to rename."
echo -e "\n\t\t${bold}<newbranch>${normal}: the new name for an existing branch."

echo -e "\n------------"

# the command's usage examples
# example 1
echo -e "\n${bold}COMMAND EXAMPLES:${normal}"
echo -e "\n\t${underline}Example 1${normal}"
echo -e "\n\tgit branch -d develop-new-feature"
echo -e "\n\t\tthis command deletes the branch called \"develop-new-feature\" if it is fully merged"
echo -e "\t\tinto other branch. But with -D flag, it will delete the branch regardless of its"
echo -e "\t\tstatus and without warnings."
# example 2
echo -e "\n\t${underline}Example 2${normal}"
echo -e "\n\tgit branch --set-upstream develop-new-feature origin/develop-new-feature"
echo -e "\n\t\tthis command links the local branch to remote branch.\n"

#   ...      etc

exit 0
