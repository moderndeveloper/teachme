#!/usr/bin/env bash

# The command's name
echo -e 'git init'

# the command's description
echo "git init initializes a new Git repository or reinitializes an existing one. If no argument is specifified, git init will perform on your present working directory.

git init converts your directory into a Git repository. It creates a .git folder and allows version control to start. When you reinitialize an existing repository, its commit history will be reset."

echo "------------"

# the command's syntax
echo "Syntax:"
echo "git init [option] [directory]"
echo -e "\t[option] - A command option or command flag specifiying how the repository will be created and who can access it."
echo -e "\t[option: -q] - Creates the repository without any messaging. Messages will only print if there are errors or warnings."
echo -e "\t[option: --bare] - Places all the files all the files normally in the .git directory at the top-level directory."
echo -e "\t[directory] - The directory where you wish to initiate a git repository. By default will initiate in the current directory where you execute the command."

echo "------------"

# the command's usage examples
# example 1
echo "git init"
echo "Initializes a new git repository or reinitializes an existing one."

# example 2
echo "git init -q"
echo "Initializes a new git repository or reinitializes an existing one quietly. It will only print out error and warning messages."

# example 3
echo "git init --bare"
echo "Initializes a bare git repository. A bare git repository has no working directory and has no .git directory created. Instead the files normally in the .git repository is placed in the top-level directory where the working directory would normally be."

exit 0
