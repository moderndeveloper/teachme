#!/usr/bin/env bash

# The command's name
echo -e 'git pull'

# the command's description
echo "The git pull command merges changes in the remote repository of your project into the local repository.

git pull is shorthand for git fetch, followed by git merge."

echo "------------"

# the command's syntax
echo "Syntax:"
echo "git pull [option(s)] [repository]"
echo -e "\t[option(s)] - The command options or command flags you wish to execute to specify how the selected repository will be pulled."
echo -e "\t[option(s) --rebase] -Uses git rebase instead of git merge when pulling. Look up git rebase for more information"
echo -e "\t[repository] -The remote repository you wish to pull from and merge to the local copy."

echo "------------"

# the command's usage examples
# example 1
echo "git pull origin feature"
echo "Fetch the specified branch (feature) from the remote repository (origin) and merge it into the current branch."

# example 2
echo "git pull --rebase origin feature"
echo "Fetch the specified branch (feature) from the remote repository (origin) and instead of using git merge to merge it into the current branch, it uses git rebase."

# example 3
echo "git pull --no-edit origin feature"
echo "Fetch the specified branch (feature) from the remote repository (origin) and merge it into the current branch while using the auto-generated merge commit message."

# example 4
echo "git pull --no-commit origin feature"
echo "Fetch the specified branch (feature) from the remote repository (origin) and merge it into the current branch but pretending the merge has failed so that it does not autocmmit. This gives the user a chance to inspect and tweak the merge result before committing."

# example 5
echo "git pull --force origin feature"
echo "Fetch the specified branch (feature) from the remote repository (origin) and merge it into the current branch while disregarding any merge conflicts. Use this with caution."

exit 0
