#!/usr/bin/env bash

# some formatting variables
bold="\033[1m"
underline="\033[4m"
normal="\033[0m"
# to use this formatting use 'echo -e'
# start formatting sequence with ${bold} or ${underline}
# and end it with ${normal}

# The command's name
echo -e "\n${bold}COMMAND NAME:${normal}"
echo -e "\n\t${bold}find${normal} - search files and folders."

echo -e "\n------------"

# the command's description
echo -e "\n${bold}COMMAND DESCRIPTION:${normal}"
echo -e "\n\tVery popular and useful command for searching and locating files and directories "
echo -e "\tbased on conditions provided. At least one pathname must be specified."
echo -e "\n\t'find' command is used in variety of conditions to find files by permissions, users, file "
echo -e "\ttype, date, size and the most useful conditions include -print, -name, and -type (for "
echo -e "\tgeneral use), -exec and -size (for advanced users), and -mtime and -user (for administrators)."

echo -e "\n------------"

# the command's syntax
echo -e "\n${bold}COMMAND SYNTAX:${normal}"
echo -e "\n\tfind [-H] [-L] [-P] [-D debugopts] [-Olevel] [starting-point...] [expression]"
echo -e "\n\t\t${underline}option${normal}:"
echo -e "\n\t\t${bold}-P${normal}: \tdon't follow symbolic links, use information from link itself"
echo -e "\n\t\t${bold}-L${normal}: \tfollow symbolic links, use information of the files that link points to"
echo -e "\n\t\t${bold}-H${normal}: \tdon't follow symbolic links except if they are provided as the arguments on the command line"
echo -e "\n\t\t${bold}-D ${underline}debugoptions${normal}:"
echo -e "\t\t\tprint diagnostic information. Options are:"
echo -e "\n\t\t\t${underline}help${normal}\texplain debugging options"
echo -e "\n\t\t\t${underline}tree${normal}\tshow the expression tree in its original and optimised form"
echo -e "\n\t\t\t${underline}stat${normal}\tprint messages as files are examined with the stat and lstat system calls"
echo -e "\n\t\t\t${underline}opt${normal}\tprints diagnostic information relating to the optimisation of the expression tree"
echo -e "\n\t\t\t${underline}rate${normal}\tprints a summary indicating how often each predicate succeeded or failed"
echo -e "\n\t\t${bold}-Olevel${normal}: \toptimisation level, can be 0, 1, 2 or 3"
echo -e "\n\t\t${underline}starting-point${normal}: a list of starting points in the filesystem to start searching"
echo -e "\n\t\t${underline}expression${normal}:"
echo -e "\t\t\tquery specification that describes how we match files and what we do with them."
echo -e "\t\t\tThe expression is composed from the sequence of things: "
echo -e "\n\t\t\t${underline}POSITIONAL OPTIONS${normal}"
echo -e "\n\t\t\t${bold}-regextype ${underline}type${normal}:"
echo -e "\t\t\t\tchanges the regular expression syntax used by ${bold}-regex${normal} and ${bold}-iregex${normal} tests."
echo -e "\t\t\t\tFor known regular expression types use ${bold}-regextype help${normal}."
echo -e "\n\t\t\t${bold}-warn, -nowarn${normal}:"
echo -e "\t\t\t\tturn on and off warnning messages."
echo -e "\n\t\t\t${underline}GLOBAL OPTIONS${normal}"
echo -e "\n\t\t\t${bold}-depth${normal}: process the content of each directory before the directory itself."
echo -e "\n\t\t\t${bold}-maxdepth ${underline}levels${normal}:"
echo -e "\t\t\t\tdescend the given number of directory levels below the starting-points."
echo -e "\t\t\t\t${bold}-maxdepth 0${normal} means to process only the starting-points themselves, not their content."
echo -e "\t\t\t\t${underline}levels${normal} is a non-negative integer."
echo -e "\n\t\t\t${bold}-mindepth ${underline}levels${normal}:"
echo -e "\t\t\t\tdon't process directories at levels less than ${underline}levels${normal}. ${bold}-mindepth 1${normal} means to"
echo -e "\t\t\t\tprocess all files except the starting-points themselves."
echo -e "\t\t\t\t${underline}levels${normal} is a non-negative integer."
echo -e "\n\t\t\t${underline}TESTS${normal}"
echo -e "\n\t\t\t${bold}-iname${normal} ${underline}pattern${normal}:"
echo -e "\t\t\t\tcase insensitive variant of ${bold}-name${normal}."
echo -e "\n\t\t\t${bold}-name${normal} ${underline}pattern${normal}:"
echo -e "\t\t\t\tmatches the base of the file name (the path with leading directories"
echo -e "\t\t\t\tremoved) with ${underline}pattern${normal}."
echo -e "\n\t\t\t${bold}-path${normal} ${underline}pattern${normal}:"
echo -e "\t\t\t\tfinds files whose names match shell pattern ${underline}pattern${normal}. This test will not"
echo -e "\t\t\t\tinterpret '/' or '.' specially, so the whole path will be matched."
echo -e "\n\t\t\t${bold}-readable${normal}: matches files that are readable."
echo -e "\n\t\t\t${bold}-regex${normal} ${underline}pattern${normal}:"
echo -e "\t\t\t\tfinds files that match regular expression ${underline}pattern${normal}. This matches whole path,"
echo -e "\t\t\t\tit is not a search."
echo -e "\n\t\t\t${bold}-type${normal} ${underline}c${normal}:"
echo -e "\t\t\t\tfind files that are of type ${underline}c${normal}."
echo -e "\t\t\t\tSome types are: ${bold}f${normal} - regular file, ${bold}d${normal} - directory, ${bold}l${normal} - symbolic link, etc."
echo -e "\n\t\t\t${underline}ACTIONS${normal}"
echo -e "\n\t\t\t${bold}-delete${normal}: delete matched files. This option automatically turns on ${bold}-depth${normal} option."
echo -e "\t\t\t\tIt is advised to place this option at the end of the expression of the ${bold}find${normal} command."
echo -e "\n\t\t\t${bold}-exec${normal} ${underline}command${normal} ${bold};${normal} :"
echo -e "\t\t\t\texecutes the ${underline}command${normal}. The arguments that follow ${underline}command${normal} are all considered"
echo -e "\t\t\t\tto be the arguments of that command until the ';' is encountered."
echo -e "\t\t\t\tThe string '{}' in the ${underline}command${normal} is replaced by the current file name"
echo -e "\t\t\t\tthat is being processed. The strings '{}' and ';' might need to be"
echo -e "\t\t\t\tescaped or quoted to protect them from the expansion by the shell."
echo -e "\n\t\t\t${underline}OPERATORS${normal}"
echo -e "\n\t\t\t( ${underline}expression${normal} )"
echo -e "\t\t\t\tparentheses are used to force precedence, because the shell interprets them"
echo -e "\t\t\t\tspecially, they will need to be quoted or escaped with backslash, like \( ... \)."
echo -e "\n\t\t\t! ${underline}expression${normal}"
echo -e "\t\t\t\tnegates the expression."
echo -e "\n\t\t\t-not ${underline}expression${normal}"
echo -e "\t\t\t\tsame as ! ${underline}expression${normal}, but not POSIX compliant."
echo -e "\n\t\t\t${underline}expression1${normal} ${underline}expression2${normal}"
echo -e "\t\t\t\texpressions are joined with an implied 'and'."
echo -e "\n\t\t\t${underline}expression1${normal} -a ${underline}expression2${normal}"
echo -e "\t\t\t\tsame as ${underline}expression1${normal} ${underline}expression2${normal}."
echo -e "\n\t\t\t${underline}expression1${normal} -and ${underline}expression2${normal}"
echo -e "\t\t\t\tsame as ${underline}expression1${normal} ${underline}expression2${normal}, but not POSIX compliant."
echo -e "\n\t\t\t${underline}expression1${normal} -o ${underline}expression2${normal}"
echo -e "\t\t\t\tlogical 'or'."
echo -e "\n\t\t\t${underline}expression1${normal} -or ${underline}expression2${normal}"
echo -e "\t\t\t\tsame as ${underline}expression1${normal} -o ${underline}expression2${normal}, but not POSIX compliant."
echo -e "\n\t\t\t${underline}expression1${normal} , ${underline}expression2${normal}"
echo -e "\t\t\t\tlist of expressions, they are always evaluated, all except the last one"
echo -e "\t\t\t\tare discarded, and the list gets the value of the last expression."

echo -e "\n------------"

# the command's usage examples
# example 1
echo -e "\n${bold}COMMAND EXAMPLES:${normal}"
echo -e "\n\t${underline}Example 1${normal}"
echo -e "\n\tfind . -iname 'tom'"
echo -e "\n\t\tlocate and print a list of any files in or below the current directory whose name is "tom","
echo -e "\t\tbut match the letters case-insensitively."

# example 2
echo -e "\n\t${underline}Example 2${normal}"
echo -e "\n\tfind . -name '*.jpg' -o -name '*.gif'"
echo -e "\n\t\tfind any files in or below the current directories whose extension is '.jpg' or '.gif'\n"

#   ...      etc

exit 0
